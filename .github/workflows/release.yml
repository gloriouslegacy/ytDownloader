name: Build and Release

on:
  push:
    branches:
      - main      # main push → Pre-release
    tags:
      - "v*"      # tag push (ex: v1.0.0) → Release

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      # WPF 메인 앱 빌드
      - name: Build ytDownloader
        run: dotnet publish ytDownloader/ytDownloader.csproj -c Release -r win-x64 --self-contained false -o publish/ytDownloader

      # Updater 빌드 (여러 파일 출력)
      - name: Build Updater
        run: dotnet publish Updater/Updater.csproj -c Release -r win-x64 --self-contained false -o publish/Updater

      # 릴리스 패키지 준비
      - name: Prepare packages
        shell: pwsh
        run: |
          mkdir dist

          # ytDownloader 압축 (Updater.exe는 제외)
          Copy-Item publish/ytDownloader/* dist/ytDownloader/ -Recurse
          if (Test-Path dist/ytDownloader/Updater.exe) { Remove-Item dist/ytDownloader/Updater.exe }
          Compress-Archive -Path dist/ytDownloader/* -DestinationPath yt_downloader_${{ github.ref_name }}.zip -Force

          # Updater 압축 (여러 파일 포함)
          Compress-Archive -Path publish/Updater/* -DestinationPath yt_updater_${{ github.ref_name }}.zip -Force

      # GitHub Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            📦 릴리스 안내

            메인 프로그램: yt_downloader_${{ github.ref_name }}.zip  
            → 실행 파일 및 DLL 포함 (Updater.exe 제외)

            업데이트 도구: yt_updater_${{ github.ref_name }}.zip  
            → Updater.exe + DLL + json 등 필요한 모든 파일 포함 (별도 Asset)

            ⚠️ 자동 업데이트는 메인 ZIP만 다운로드합니다.  
            Updater는 설치 폴더에 항상 유지되며, 필요 시 교체하세요.
          files: |
            yt_downloader_${{ github.ref_name }}.zip
            yt_updater_${{ github.ref_name }}.zip
          prerelease: ${{ !startsWith(github.ref, 'refs/tags/') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
